<div class="jumbotron text-center">
  <h1>Sesh</h1>
  <p>get stuff done.</p> 
  <button type="logout" id="logout">Logout</button>
</div>

<div class="container">
  <div class="row">
  <div class="col-6">

      <h2>Tasks:</h2>
      <p><form action="api/tasks" method="POST">Add a Task: <input type="text" name="title"><button type="submit" > + </button></form></p>

      <ul>
      {{#each tasks}}
        {{#unless this.complete}}
        <hr>
        <div class="row">
          <a href="task/{{this.id}}">{{this.title}}</a>&nbsp;&nbsp;
            <button data-taskId="{{this.id}}" class='taskComplete'> Complete </button>
        </div>
        <div class="row">
          <p>{{this.description}}</p>
        </div>
        <div class="row">
          <form action="api/tasks" method="POST">
            <input type="hidden" name="TaskId" value="{{this.id}}">
            Add a Sub Task: <input type="text" name="title">
            <button type="submit" > + </button>
          </form>
        </div>
        <div class="nestedTasks" data-root-task-id="{{this.id}}"></div>
        {{/unless}}
      {{/each}}
      </ul>
    
  </div>
  <div class="col-6">
    <h3>Complete:</h3>
      <ul>
        {{#each tasks}}
          {{#if complete}}
            <div class="row">
              <s><a href="task/{{this.id}}">{{this.title}}</a></s>&nbsp;&nbsp;
              <button data-taskId="{{this.id}}" class="taskIncomplete">Incomplete</button><br>
            </div>
            <br>
          {{/if}}
        {{/each}}
      </ul>
      </div>
  </div>
</div>
<script>
  const nestedTasksDivs = document.querySelectorAll('.nestedTasks');
  for (let i = 0, len = nestedTasksDivs.length; i < len; i++) {
    const ntd = nestedTasksDivs[i];
    const rootTaskId = ntd.getAttribute("data-root-task-id");
    let nestedTasksHtml = "";
    fetch(`/api/tasks/${rootTaskId}`)
      .then(function(res) {
        return res.json();
      })
      .then(function(tasks) {
        console.log(tasks);
        for (let i = 0, len = tasks.length; i < len; i++) {
          if (tasks[i].title !== undefined) {
            nestedTasksHtml += `<p><a href="task/${tasks[i].id}">${tasks[i].title}</a></p>`;
          }
        }
        ntd.innerHTML = nestedTasksHtml;
      })
      .catch(function(err) {
        console.log(err)
      });
  }

  const completeButtons = document.querySelectorAll('.taskComplete');
  for (let i = 0, len = completeButtons.length; i < len; i++) {
    completeButtons[i].addEventListener('click', (event) => {
      const id = event.target.attributes['data-taskId'].value;
      fetch(`/api/tasks/complete/${id}`, {
        method: 'PUT'
      }).then(function(res) {
        location.reload();
      }).catch(function(err) {
        console.log(err)
      });
    });
  }

  const incompleteButtons = document.querySelectorAll('.taskIncomplete');
  for (let i = 0, len = incompleteButtons.length; i < len; i++) {
    incompleteButtons[i].addEventListener('click', (event) => {
      const id = event.target.attributes['data-taskId'].value;
      fetch(`/api/tasks/incomplete/${id}`, {
        method: 'PUT'
      }).then(function(res) {
        location.reload();
      }).catch(function(err) {
        console.log(err)
      });
    });
  }

  const logoutButton = document.querySelector("#logout");
  logoutButton.addEventListener('click', (event) => {
    window.location.href = "/logout";
  });
</script>